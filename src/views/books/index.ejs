<%- contentFor('styles') %>
<%- contentFor('scripts') %>
<script>

const generateBookCard = (bookCard) => {
  return `
    <div class="col-12 col-md-5 col-lg-3" style="padding: 15px;">
      <div class="card" style="margin-top: 15px;height:100%;">
      <img id='${bookCard.id}' src="${bookCard.volumeInfo.imageLinks?.thumbnail || 'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png' }" class="card-img-top book-card" style="height: 250px;" alt="...">
        <div id='${bookCard.id}' class="card-body book-card">
          <h5 id='${bookCard.id}' class="card-text card-body">${bookCard.volumeInfo.title}</h5>
          <h6 id='${bookCard.id}' class="card-text card-body">Authors:
            </br>${bookCard.volumeInfo.authors || 'Authors not found'}</p>
          <h6 id='${bookCard.id}' class="card-text card-body">Categories:
            </br>${bookCard.volumeInfo.categories || 'Categories not found'}</p>
        </div>
      </div>
    </div>
  `
}

const generateBookCards = ({ isLoading, bookCards = [] } = {}) => {
  if (isLoading) return `<div class="text-center mb-3">Loading...</div>`
  if (bookCards.length === 0) {
    return `
      <h2 class="text-center mb-3">No Books Found!</h2>
    `
  }
  return `
    <div class="row">
      <div class="">
        <div id="books-list" class="row d-flex align-items-stretch justify-content-around">
          ${bookCards.map((bookCard) => generateBookCard(bookCard)).join('')}
        </div>
      </div>
    </div>
  `
}

const generatePage = (info) => {
  const $page = $('#pages-books-index')
  const $bookCards = generateBookCards(info)
  $page.html('').append($bookCards)
}

$(document).ready(() => {

  let autoSearch = 'Become a Web Developer'
  axios({
    method: 'GET',
    url: `/api/books/search/${autoSearch}&notFound&notFound`
  }).then((resp) => {
    console.log(resp.data);
    generatePage({ bookCards: resp.data.items})
    $('#pages-books-index').prepend(`<h1>Results for Searching "${autoSearch}"</h1>`).fadeIn(800)
  })

$('#search-form').on('submit',(e) => {
    e.preventDefault()
    generatePage({ isLoading: true })
    const data = parseFormData(new FormData(e.target))
    const url = `/api/books/search/${data.title? `${data.title}` : 'notFound'}${data.author? `&${data.author}` : '&notFound'}${data.category? `&${data.category}` : '&notFound'}`
    axios({
      method: 'GET',
      url
    }).then((resp) => {
      console.log(resp.data);
      generatePage({ bookCards: resp.data.items})
      const title = data.title? (data.author? data.title + ' + ' : data.title) : ''
      const author = data.author? (data.category? data.author + ' + ' : data.author) : ''
      const category = data.category
      $('#pages-books-index').prepend(`<h1>Results for Searching "${title}${author}${category}"</h1>`).fadeIn(800)
    })
  })
  $('#pages-books-index').on('click','.book-card',(e) => {
    window.location.href = `book/${e.target.id}`

  })

})


</script>

<%- contentFor('body') %>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="container-fluid">
      <form id='search-form' class="d-flex">
        <input id='search-title' class="form-control me-2" type="text" placeholder="Title" name="title" aria-label="Title">
        <input id='search-author' class="form-control me-2" type="text" placeholder="Author" name="author" aria-label="Author">
        <input id='search-category' class="form-control me-2" type="text" placeholder="Category" name="category" aria-label="Category">
        <button class="btn btn-outline-success" type="submit">Search</button>
      </form>
  </div>
</nav>
<div id="pages-books-index" class="container"></div>
